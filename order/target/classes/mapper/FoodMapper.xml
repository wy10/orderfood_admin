<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rimi.cs.dao.FoodMapper">
  <resultMap id="BaseResultMap" type="com.rimi.cs.pojo.Food">
    <id column="foodid" jdbcType="INTEGER" property="foodid" />
    <result column="foodname" jdbcType="VARCHAR" property="foodname" />
    <result column="foodprice" jdbcType="DOUBLE" property="foodprice" />
    <result column="foodtype" jdbcType="VARCHAR" property="foodtype" />
    <result column="foodimage" jdbcType="VARCHAR" property="foodimage" />
    <result column="maxoutput" jdbcType="INTEGER" property="maxoutput" />
    <result column="count" jdbcType="INTEGER" property="count" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from food
    where foodid = #{foodid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.rimi.cs.pojo.Food">
    insert into food (foodid, foodname, foodprice, 
      foodtype, foodimage, maxoutput
      )
    values (#{foodid,jdbcType=INTEGER}, #{foodname,jdbcType=VARCHAR}, #{foodprice,jdbcType=DOUBLE}, 
      #{foodtype,jdbcType=VARCHAR}, #{foodimage,jdbcType=VARCHAR}, #{maxoutput,jdbcType=INTEGER}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.rimi.cs.pojo.Food">
    update food
    set foodname = #{foodname,jdbcType=VARCHAR},
      foodprice = #{foodprice,jdbcType=DOUBLE},
      foodtype = #{foodtype,jdbcType=VARCHAR},
      foodimage = #{foodimage,jdbcType=VARCHAR},
      maxoutput = #{maxoutput,jdbcType=INTEGER}
    where foodid = #{foodid,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select foodid, foodname, foodprice, foodtype, foodimage, maxoutput
    from food
    where foodid = #{foodid,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select foodid, foodname, foodprice, foodtype, foodimage, maxoutput
    from food
  </select>
  <select id="selectCount" resultMap="BaseResultMap">
    select * from
    (select foodid,foodname,maxoutput from food) B
    inner join
    (select foodid,sum(count)as count from orderfood group by foodid) A
    on B.foodid=A.foodid
  </select>
  <select id="selectFood" parameterType="java.lang.String" resultMap="BaseResultMap">
    select * from food
    <where>
      <if test="foodname != null and foodname != ''">
        foodname like concat('%',#{foodname},'%')
      </if>
    </where>
  </select>

</mapper>